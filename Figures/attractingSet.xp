
#include "epix.h"
#include "stdio.h"
using namespace ePiX;


P F(double x, double y) { return P(x-x*x*x, -y ) ; } 


void ellipse(double t){
  path n1;
  for (int j=-60; j<60; j++){
    double x,y;
    x = double(j)/40.  ;
    y = 0.3*sqrt  ( 6.5 - ((x-1)*(x-1) + ((x+1)*(x+1))));
    P dest = flow(F, P(x,y),t,int(t/0.1));
    n1.pt(dest);
  }

  for (int j=60; j>-60; j=j-1){
    double x,y;
    x = double(j)/40.  ;
    y = - 0.3*sqrt ( 6.5 - ((x-1)*(x-1) + (x+1)*(x+1)));
    P dest = flow(F, P(x,y),t,int(t/0.1));
    n1.pt(dest);
  }

  n1.close();
  n1.draw();
}


int main() {


//
// \begin{align*}
//\dot x &= x + y^3 \\
//\dot y &= -y + 2xy + x^2
//\end{align*}


  bounding_box(P(-2,-2), P(2,2));
  picture(8,8);
  unitlength("40pt");

  begin();

  plain(Black(0.5));
  arrow(P(-2.1,0), P(2.1,0));
  arrow(P(0,-1.1), P(0,1.1));
  label (P(2.2,0),P(0,0), "x"); 
  label (P(0,1.2),P(0,0), "y"); 
  plain(Black(1.0)); 

  for (int i=-1;i<2;i++){
    for (int j=-1;j<2;j=j+2) {
       arrow(P(i,j*1),P(i,j*0.5));
       line(P(i,j*0.5),P(i,0));
    };
  }

  arrow(P(0,0), P(0.5,0));
  arrow(P(0,0), P(-0.5,0));

  arrow(P(2.0,0), P(1.5,0));
  arrow(P(-2.0,0), P(-1.5,0));

  line (P(1.5,0), P(-1.5,0));

  circ(P(0,0)); label(P(0,0), P(0,-0.8), "$(0,0)$", b);
  dot(P(1,0));  label(P(1,0), P(0,-0.8), "$(1,0)$", b);
  dot(P(-1,0)); label(P(-1,0), P(0,-0.8), "$(-1,0)$", b);


  dashed();
  plain(Blue(0.5));
  ellipse(0);
  ellipse(1);
  ellipse(2);
  ellipse(3);

  tikz_format();
  end();
}
