
#include "epix.h"
#include "stdio.h"

#define delta 0.12
#define lambda -0.5

using namespace ePiX;

// double ux (double x) {  return (1./3.*x*x + x*x*x/6. + x*x*x*x/30.) ;}
//
//
double H (double x, double y) { return (x*x*x*x/4.  - x*x/2.  + y*y/2. ); }

P F (double x, double y) {  
  double  HH = H(x,y);
  return P(y + lambda*HH*(x*x*x-x), x - x*x*x + lambda*HH*y); }



int main() {


//
// \begin{align*}
//\dot x &= x + y^3 \\
//\dot y &= -y + 2xy + x^2
//\end{align*}


  bounding_box(P(-2.2,-2.2), P(2.2,2.2));
  picture(6,6);
  unitlength("40pt");

  begin();

//  domain R2(P(-1,-1), P(1,1), mesh(12,12)); 
//
//


  plain(Black(1.0));

  arrow(P(-2.2,0), P(2.2,0));
  arrow(P(0,-1.2), P(0,1.2));
 
  label(P(2.3,0), "x");
  label(P(0,1.3), "y");
   
  // dart_field(F, R2,.1); //

  
  solid();  
  plain(Blue(1.0));
//  ode_plot(F,P(2,.5),15.,150); 
  ode_plot(F,P(-0.05,-0.35),15.,150); 
  plain(Green(1.0));
  ode_plot(F,P(.05,.045),15.,150);
  ode_plot(F,P(-.05,-.05),15.,150);
  plain(Red(1.0));
  ode_plot(F,P(-1.3,0),15.,150);
  ode_plot(F,P(1.3,0),15.,150);


  dot (P(-1,0));
  dot (P(1,0));
  circ(P(0,0));
//  ode_plot(F,P(.05,-.05),0.,-15.1,150);
//  ode_plot(F,P(-.05,.05),0.,-15.1,150);

  char buffer[50];
  sprintf(buffer, "$\\lambda = %.1f$", lambda);
  label(P(0,1.7), P(0,0), buffer,b);

  tikz_format();


  tikz_format();
  end();
}
