
#include "epix.h"
#include "stdio.h"
using namespace ePiX;


// double ux (double x) {  return (1./3.*x*x + x*x*x/6. + x*x*x*x/30.) ;}

P traj(double t, double C1, double lambda, double omega) { 
  return P(
        C1*exp(lambda*t) * cos(omega*t), 
        C1*exp(lambda*t) * sin(omega*t)) ; }

void plot_traj(double C1, double lambda, double omega) {
   path Ptraj;
   double t;
   int b1 = 0;
   int b2 = 60;
    for (int i=b1; i<=b2; ++i) {
      t = i/10.;
      Ptraj.pt(traj(t,C1,lambda, omega)); // works in all angle modes
    }
   Ptraj.draw();
   arrow(
      traj(0.40,C1,lambda,omega), 
      traj(0.50,C1,lambda,omega));
}



int main() {


//
// \begin{align*}
//\dot x &= x + y^3 \\
//\dot y &= -y + 2xy + x^2
//\end{align*}


  bounding_box(P(-1.2,-1.2), P(1.2,1.7));
  picture(2.4,2.9);
  unitlength("60pt");

  begin();

  domain R2(P(-1,-1), P(1,1), mesh(12,12)); 
  arrow(P(-1.2,0), P(1.2,0));
  arrow(P(0,-1.2), P(0,1.2));
 
//  label(P(1.4,0), "$\\Im(\\mathbf{q})$");
//  label(P(0,1.3), "$\\Re(\\mathbf{q})$");
 
  label(P(1.4,0), "$x$");
  label(P(0,1.3), "$y$");

  plain(Blue(1.0));
  for (int i=1; i<=3; ++i) {
  plot_traj( double(i)/3,    -.4, 2.);
  }

  char buffer[50];
  sprintf(buffer, "$\\lambda = \\lambda_r \\pm i\\omega$, $\\lambda_r < 0$");
  label(P(0,1.7), P(0,0), buffer,b);

  plain(Red(1.0));
  bold();
  label_color(Red(1.0));
  arrow(P(0,0), P(0,1)); label(P(0,1),P(6,2),"$\\vec{v}$", b);
  arrow(P(0,0), P(1,0)); label(P(1,0),P(2,8),"$\\vec{u}$", r);



  tikz_format();

  end();
}
