
#include "epix.h"
#include "stdio.h"
using namespace ePiX;

// double ux (double x) {  return (1./3.*x*x + x*x*x/6. + x*x*x*x/30.) ;}
double ux (double x) {  return (1./3.*x*x + x*x*x/6. + 1*x*x*x*x/15.) ;}
double sy (double y) {  return (- y*y*y/4.) ;}

P F(double x, double y) { return P(x+y*y*y, -y + 2*x*y + x*x) ; } 

int main() {


//
// \begin{align*}
//\dot x &= x + y^3 \\
//\dot y &= -y + 2xy + x^2
//\end{align*}


  bounding_box(P(-2,-2), P(2,2));
  picture(8,8);
  unitlength("40pt");

  begin();

  domain R2(P(-1,-1), P(1,1), mesh(12,12)); 
  arrow(P(-1.2,0), P(1.2,0));
  arrow(P(0,-1.2), P(0,1.2));
 
  label(P(1.3,0), "x");
  label(P(0,1.3), "y");
   
  dart_field(F, R2,.1); //

  path stableManifold; // declare new path
  double x,y;
  for (int i=-10; i<=10; ++i) {
    y = double(i)/10.; x=sy(y);
    stableManifold.pt(P(x,y)); // works in all angle modes
  }

  path unstableManifold; // declare new path
  for (int i=-10; i<=10; ++i) {
    x = double(i)/10.;
    y = ux(x);
    unstableManifold.pt(P(x,y)); // works in all angle modes
  }
  
  solid();  
  plain(Red(1.0));
  ode_plot(F,P(.1,.1),2.,20);
  ode_plot(F,P(.1,.1),2.,20);

  ode_plot(F,P(-.1,-.1),2.,15);
  ode_plot(F,P(-.1,-.1),-2.,15);
 
  ode_plot(F,P(.1,-.1),1.8,15);
  ode_plot(F,P(.1,-.1),-1.8,15);

  ode_plot(F,P(-.1,.1),1.8,15);
  ode_plot(F,P(-.1,.1),-1.8,15);

  ode_plot(F,P(.2,.2),1.5,20);
  ode_plot(F,P(.2,.2),1.5,20);

  ode_plot(F,P(-.2,-.2),1.5,15);
  ode_plot(F,P(-.2,-.2),-2.5,15);
 
  ode_plot(F,P(.2,-.2),1.5,15);
  ode_plot(F,P(.2,-.2),-1.5,15);

  ode_plot(F,P(-.2,.2),1.,15);
  ode_plot(F,P(-.2,.2),-1.,15);

  plain(Green(1.0));
  bbold();
  ode_plot(F,P(0,.01),2.,30);
  ode_plot(F,P(0,.01),-4.5,30);
  ode_plot(F,P(0,-.01),2.,30);
  ode_plot(F,P(0,-.01),-4.5,30);
  ode_plot(F,P(.01,0),4.8,30);
  ode_plot(F,P(.01,0),-1.,30);
  ode_plot(F,P(-.01,0),4.8,30);
  ode_plot(F,P(-.01,0),-1.,30);

  solid(); plain(Blue(1.0));
  stableManifold.draw();
  dashed();
  unstableManifold.draw();







  tikz_format();
  end();
}
